{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/author/author.component.css","webpack:///./src/app/author/author.component.html","webpack:///./src/app/author/author.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/material-ui/material.module.ts","webpack:///./src/app/planets/definition/definition.component.css","webpack:///./src/app/planets/definition/definition.component.html","webpack:///./src/app/planets/definition/definition.component.ts","webpack:///./src/app/planets/planet-details/planet-details.component.css","webpack:///./src/app/planets/planet-details/planet-details.component.html","webpack:///./src/app/planets/planet-details/planet-details.component.ts","webpack:///./src/app/planets/planets-browser/planets-browser.component.css","webpack:///./src/app/planets/planets-browser/planets-browser.component.html","webpack:///./src/app/planets/planets-browser/planets-browser.component.ts","webpack:///./src/app/planets/services/planets-api.service.ts","webpack:///./src/app/planets/services/planets-manager.service.ts","webpack:///./src/app/welcome/welcome.component.css","webpack:///./src/app/welcome/welcome.component.html","webpack:///./src/app/welcome/welcome.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".main-page{\\r\\n    width: 80%;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    border-width: 3px;\\r\\n    border-color: lightgray;\\r\\n    border-style: ridge;\\r\\n    background: whitesmoke;\\r\\n}\"","module.exports = \"<div class=\\\"main-page\\\">\\r\\n  <app-header></app-header>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\"","import { Component } from '@angular/core';\r\n// import {MatButtonModule} from '@angular/material/button';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'hello-app';\r\n}\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { WelcomeComponent } from './welcome/welcome.component';\r\nimport { PlanetsBrowserComponent } from './planets/planets-browser/planets-browser.component';\r\nimport { MaterialModule } from './material-ui/material.module';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PlanetDetailsComponent } from './planets/planet-details/planet-details.component';\r\nimport { DefinitionComponent } from './planets/definition/definition.component';\r\nimport { AuthorComponent } from './author/author.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    WelcomeComponent,\r\n    PlanetsBrowserComponent,\r\n    HeaderComponent,\r\n    PlanetDetailsComponent,\r\n    DefinitionComponent,\r\n    AuthorComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    RouterModule.forRoot([\r\n      { path: 'welcome', component: WelcomeComponent },\r\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\r\n      { path: 'planets', component: PlanetsBrowserComponent },\r\n      { path: 'definition', component: DefinitionComponent },\r\n      { path: 'planets/:id', component: PlanetDetailsComponent },\r\n      { path: 'author', component: AuthorComponent },\r\n      { path: '**', redirectTo: 'welcome', pathMatch: 'full' }\r\n    ]),\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    FormsModule\r\n  ],\r\n  // providers: [], // angular 5. \r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Who am I?\\r\\n  </mat-card-title>\\r\\n\\r\\n  <mat-card-subtitle>\\r\\n    Just a modest front-end developer. Besides that I'm awesome and super cool :)\\r\\n  </mat-card-subtitle>\\r\\n\\r\\n  <mat-card-content>\\r\\n    <p style=\\\"margin-top: 40px\\\">\\r\\n      I am\\r\\n      <span style=\\\"text-decoration: line-through; font-style: italic; color: gray;\\\">JavaScript</span>\\r\\n      TypeScript developer.</p>\\r\\n\\r\\n    <p>This is one of my firsts apps made in Angular. Usually I code in React. Coded - past tense. I`m starting to like Angular...\\r\\n      :) </p>\\r\\n\\r\\n    <p style=\\\"margin-top: 40px\\\"> More about me can be found at this page:</p>\\r\\n    <p>\\r\\n      <a href=\\\"https://github.com/Sazar24/curriculum-vitae/blob/master/CV.md\\\">CV-online-version</a>\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <p style=\\\"margin: 70px 0px 20px 40px\\\">\\r\\n    <span style=\\\"font-style: italic; font-size: 16px;\\\">\\r\\n      Cezary Budrewicz \\r\\n    </span>\\r\\n  </p>\\r\\n</mat-card>\"","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-author',\r\n  templateUrl: './author.component.html',\r\n  styleUrls: ['./author.component.css']\r\n})\r\nexport class AuthorComponent{ }","module.exports = \".header{\\r\\n    padding: 15px 10px;\\r\\n    text-align: center;\\r\\n    font-style: italic;\\r\\n    font-size: 24px;\\r\\n    background-color: rgb(218, 218, 218);\\r\\n    color: black;\\r\\n}\\r\\n\\r\\n.toolbar-menu{\\r\\n    background: silver;\\r\\n}\"","module.exports = \"<div class=\\\"header\\\">\\r\\n  Planets Browser app\\r\\n</div>\\r\\n<mat-toolbar>\\r\\n  <!-- <mat-toolbar-row class=\\\"header\\\">\\r\\n  Planets Browser app\\r\\n  </mat-toolbar-row> -->\\r\\n  <mat-toolbar-row class=\\\"toolbar-menu\\\">\\r\\n    <button mat-button [routerLink]=\\\"['welcome']\\\">Start</button>\\r\\n    <button mat-button [routerLink]=\\\"['planets']\\\">Planets List</button>\\r\\n    <button mat-button [routerLink]=\\\"['definition']\\\">What is a planet</button>\\r\\n    <button mat-button [routerLink]=\\\"['author']\\\">About Author</button>\\r\\n  </mat-toolbar-row>\\r\\n  <!-- <button mat-button [routerLink]=\\\"['welcome']\\\">Menu</button>\\r\\n  <a [routerLink]=\\\"['welcome']\\\">welcome-test-router</a> -->\\r\\n</mat-toolbar>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule, MatMenuModule } from '@angular/material';\r\nimport { MatToolbarModule, MatToolbarRow } from '@angular/material/toolbar';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatListModule } from '@angular/material/list'\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\n\r\nconst materials = [\r\n  CommonModule,\r\n  BrowserAnimationsModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatCardModule,\r\n  MatDividerModule,\r\n  MatInputModule,\r\n  MatIconModule,\r\n  MatProgressSpinnerModule,\r\n  MatTableModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatListModule,\r\n  MatGridListModule\r\n];\r\n\r\n@NgModule({\r\n  imports: [...materials],\r\n  exports: [...materials],\r\n  declarations: []\r\n})\r\nexport class MaterialModule { }\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    What is a Planet?\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <p> This seemingly simple question doesn't have a simple answer.</p>\\r\\n    <p> Everyone knows that Earth, Mars and Jupiter are planets. At least, they are for now. Both Pluto and Ceres were once considered\\r\\n      planets until new discoveries triggered scientific debate about how to best describe them - a vigorous debate that\\r\\n      continues to this day. </p>\\r\\n    <p>The most recent definition of a planet was adopted by the International Astronomical Union in 2006.</p>\\r\\n    <p> It says a planet must do three things: </p>\\r\\n    <ul>\\r\\n      <p>\\r\\n        <li> It must orbit a star (in our cosmic neighborhood, the Sun). </li>\\r\\n      </p>\\r\\n      <p>\\r\\n        <li> It must be big enough to have enough gravity to force it into a spherical shape. </li>\\r\\n      </p>\\r\\n      <p>\\r\\n        <li> It must be big enough that its gravity cleared away any other objects of a similar size near its orbit around the Sun. </li>\\r\\n      </p>\\r\\n    </ul>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <mat-card-footer>\\r\\n    <h6>\\r\\n      source:\\r\\n      <a href=\\\"https://solarsystem.nasa.gov/planets/overview/\\\">\\r\\n        https://solarsystem.nasa.gov/planets/overview/\\r\\n      </a>\\r\\n    </h6>\\r\\n  </mat-card-footer>\\r\\n\\r\\n</mat-card>\"","import { Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-definition',\r\n  templateUrl: './definition.component.html',\r\n  styleUrls: ['./definition.component.css']\r\n})\r\nexport class DefinitionComponent {\r\n}\r\n","module.exports = \".planet-details-view{\\r\\n    background-image: url('https://www.b17.ru/foto/uploaded/upl_1484968602_29263.jpg');\\r\\n    background-size: 50% ;\\r\\n    background-position: right center;\\r\\n    background-repeat: no-repeat;\\r\\n    border-radius: 25px;\\r\\n\\r\\n    font-size: 16px;\\r\\n}\\r\\n\"","module.exports = \"{{planet ? null : \\\"...Attempt to connect to the server... Or maybe there is no planet with that number...?\\\"}}\\r\\n<mat-card *ngIf='planet' class=\\\"planet-details-view\\\">\\r\\n\\r\\n  <button (click)='onBack()' color='primary' mat-raised-button style=\\\"float:right\\\">\\r\\n    << Back\\r\\n  </button>\\r\\n  <mat-card-title>{{planet.name}}</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-list>\\r\\n      <mat-list-item> Rotation period: {{planet.rotation_period}} </mat-list-item>\\r\\n      <mat-list-item> Orbital period: {{planet.orbital_period}} </mat-list-item>\\r\\n      <mat-list-item> Diameter: {{planet.diameter}} </mat-list-item>\\r\\n      <mat-list-item> Climate: {{planet.climate}} </mat-list-item>\\r\\n      <mat-list-item> Gravity: {{planet.gravity}} </mat-list-item>\\r\\n      <mat-list-item> Terrain: {{planet.terrain}} </mat-list-item>\\r\\n      <mat-list-item> Surface water: {{planet.surface_water}} </mat-list-item>\\r\\n      <mat-list-item> Population: {{planet.population}} </mat-list-item>\\r\\n    </mat-list>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { PlanetsManagerService } from './../services/planets-manager.service';\r\nimport { PlanetsApiService } from './../services/planets-api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute ,Router} from '@angular/router';\r\nimport { IPlanet } from '../models/planet';\r\n\r\n@Component({\r\n  selector: 'app-planet-details',\r\n  templateUrl: './planet-details.component.html',\r\n  styleUrls: ['./planet-details.component.css']\r\n})\r\nexport class PlanetDetailsComponent implements OnInit {\r\n  planetId: number;\r\n  planet: IPlanet;\r\n  // planet: IPlanet = new IPlanet();\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private planetsManager: PlanetsManagerService,\r\n    private planetsApiService: PlanetsApiService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.planetId = +this.route.snapshot.paramMap.get('id');\r\n    this.getPlanetData();\r\n  }\r\n\r\n  getPlanetData() {\r\n    if (this.planetsManager.allPlanets.length) {\r\n      this.planet = this.planetsManager.allPlanets[this.planetId];\r\n    }\r\n    else {\r\n      const planet$ = this.planetsApiService.getPlanetById(this.planetId).subscribe(\r\n        (item: IPlanet) => {\r\n          this.planet = item;\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  onBack(): void {\r\n    this.router.navigate(['/planets']);\r\n  }\r\n}","module.exports = \".filter-input {\\r\\n    min-width: 150px;\\r\\n    /* max-width: 550px; */\\r\\n    /* max-width: 30%; */\\r\\n    max-width:50%;\\r\\n  }\\r\\n  \\r\\n  table , th, td{\\r\\n    border-bottom: 1px solid gray;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<div style=\\\"padding: 15px\\\">\\r\\n\\r\\n  <mat-card>\\r\\n    <p style=\\\"color:red; border-bottom: 1 dashed red\\\">\\r\\n      {{planetsOnServerAmmount? null : \\\"Attempting connect to the server...\\\"}}\\r\\n    </p>\\r\\n    <p>\\r\\n      There is {{planetsOnServerAmmount ? planetsOnServerAmmount : \\\"[...calculating...]\\\"}} planets in data-base.\\r\\n    </p>\\r\\n    <p>\\r\\n      Pick one from the list to see its details. You can also filter them out by name.\\r\\n    </p>\\r\\n    <p>\\r\\n      <mat-progress-bar mode=\\\"determinate\\\" [value]='progressBarValue'></mat-progress-bar>\\r\\n    </p>\\r\\n  </mat-card>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-card>\\r\\n    <mat-form-field class=\\\"filter-input\\\">\\r\\n      <input matInput placeholder=\\\"planet name\\\" value=\\\"\\\" [(ngModel)]=\\\"filterInputValue\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <table *ngIf='allPlanets.length' mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"nr\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>nr</th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n          <!-- <a [routerLink]=\\\"['planets', row.appId]\\\"> {{row.appId}}</a> -->\\r\\n          <a [routerLink]=\\\"[row.appId]\\\"> {{row.appId}}</a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"population\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> population </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.population}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"climate\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> climate </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.climate}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"gravity\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> gravity </th>\\r\\n        <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gravity}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </tr>\\r\\n    </table>\\r\\n\\r\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n  </mat-card>\\r\\n</div>\"","import { Subject } from 'rxjs';\r\nimport { IPlanetsCollection } from './../models/externalData';\r\nimport { PlanetsManagerService } from './../services/planets-manager.service';\r\nimport { IPlanet } from './../models/planet';\r\nimport { PlanetsApiService } from '../services/planets-api.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'planets-browser',\r\n  templateUrl: './planets-browser.component.html',\r\n  styleUrls: ['./planets-browser.component.css']\r\n})\r\n\r\nexport class PlanetsBrowserComponent {\r\n  public planetsOnServerAmmount: number;\r\n  public allPlanets: IPlanet[] = [];\r\n  private dataSource: MatTableDataSource<IPlanet>;\r\n  private displayedColumns: string[] = ['nr', 'name', 'population', 'climate', 'gravity'];\r\n  public progressBarValue: number = 0;\r\n\r\n  _filterInputValue = '';\r\n  get filterInputValue(): string {\r\n    return this._filterInputValue;\r\n  }\r\n\r\n  set filterInputValue(inputValue: string) {\r\n    this._filterInputValue = inputValue;\r\n    const filtredData: IPlanet[] = this.allPlanets.filter(item => item.name.toLowerCase().includes(this._filterInputValue));\r\n    this.dataSource = new MatTableDataSource(filtredData);\r\n  }\r\n\r\n  constructor(private planetsApiService: PlanetsApiService, private planetsManager: PlanetsManagerService) { }\r\n\r\n  ngOnInit() {\r\n    this.allPlanets = this.planetsManager.allPlanets;\r\n    this.planetsOnServerAmmount = this.planetsManager.planetsOnServerAmmount;\r\n    if (this.allPlanets.length) {\r\n      this.updateTableData(this.allPlanets);\r\n    }\r\n    else {\r\n      this.planetsManager.getAllPlanets();\r\n      this.subscribeToIncomingData();\r\n    }\r\n  }\r\n\r\n  subscribeToIncomingData() {\r\n\r\n    const planetsData$ = this.planetsManager.planetsDataPackage$.subscribe(\r\n      (item: IPlanet[]) => {\r\n        this.updateTableData(item);\r\n        planetsData$.unsubscribe();\r\n      }\r\n    );\r\n\r\n    const planetsAmmount$ = this.planetsManager.fetchingProgress$.subscribe(\r\n      (data: { planetsTotalAmmount, planetsFetched }) => {\r\n        this.planetsOnServerAmmount = data.planetsTotalAmmount;\r\n        this.progressBarValue = data.planetsFetched * 100 / data.planetsTotalAmmount;\r\n      }\r\n    )\r\n  }\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  updateTableData(allPlanetsData: IPlanet[]) {\r\n\r\n    this.allPlanets = allPlanetsData;\r\n\r\n    this.dataSource = new MatTableDataSource(this.allPlanets);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n}\r\n\r\n\r\n// pagination made by example from: https://material.angular.io/components/table/examples","import { IPlanetsCollection } from './../models/externalData';\r\nimport { IPlanet } from '../models/planet';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport class PlanetsApiService {\r\n  requestURL = 'https://swapi.co/api/planets';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getNextPlanets(url: string): Observable<IPlanetsCollection> {\r\n    return this.http.get<IPlanetsCollection>(url);\r\n  }\r\n\r\n  getPlanetById(id: number): Observable<IPlanet> {\r\n    const url: string = this.requestURL + `/${id}`;\r\n    return this.http.get<IPlanet>(url);\r\n  }\r\n\r\n};","import { Observable, Subject } from 'rxjs';\r\nimport { IPlanetsCollection } from './../models/externalData';\r\nimport { Injectable } from '@angular/core';\r\nimport { IPlanet } from '../models/planet';\r\nimport { PlanetsApiService } from './planets-api.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PlanetsManagerService {\r\n  public planetsOnServerAmmount: number;\r\n  public allPlanets: IPlanet[] = [];\r\n\r\n  public planetsDataPackage$ = new Subject();\r\n  public fetchingProgress$ = new Subject();\r\n\r\n  constructor(private planetsApiService: PlanetsApiService) { }\r\n\r\n  addIdPropertyForEachInArray(array: IPlanet[]) {\r\n    array.forEach((item, index) => {\r\n      item.appId = index + 1;\r\n    })\r\n  }\r\n\r\n  getAllPlanets() {\r\n    if (this.allPlanets.length === this.planetsOnServerAmmount) return;\r\n    const initialUrl = this.planetsApiService.requestURL;\r\n    this.downloadNextPlanets(initialUrl);\r\n  }\r\n\r\n  downloadNextPlanets(url: string) {\r\n    const subscription = this.planetsApiService.getNextPlanets(url).subscribe(\r\n      (incomingData: IPlanetsCollection) => {\r\n\r\n        this.allPlanets.push(...incomingData.results);\r\n        this.setProgressData(incomingData.count, this.allPlanets.length);\r\n\r\n        url = incomingData.next;\r\n      },\r\n      () => console.log(\"error while fetching data from server...\"),\r\n      () => {\r\n        if (url) this.downloadNextPlanets(url);\r\n        else {\r\n          subscription.unsubscribe();\r\n          this.informSubscribers();\r\n        }\r\n      }\r\n    )\r\n  };\r\n\r\n  setProgressData(ammount: number, planetsFetched: number) {\r\n    const planetsTotalAmmount: number = +ammount;\r\n    this.planetsOnServerAmmount = planetsTotalAmmount;\r\n\r\n    this.fetchingProgress$.next({ planetsTotalAmmount, planetsFetched });\r\n  }\r\n\r\n  informSubscribers(): void {\r\n    this.addIdPropertyForEachInArray(this.allPlanets);\r\n    this.planetsDataPackage$.next(this.allPlanets);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Welcome\\r\\n  </mat-card-title>\\r\\n  <mat-card-subtitle>\\r\\n    On this simple planets-browser page.\\r\\n  </mat-card-subtitle>\\r\\n  <mat-card-content>\\r\\n    <p>\\r\\n      There is only 8 planets in our Solar System\\r\\n      <span style=\\\"opacity: 0.5;\\\">(till 2006 it used to be 9 xD )</span>.\\r\\n    </p>\\r\\n    <p>\\r\\n      So in order to expand content of this site, its showing other planets...\\r\\n    </p>\\r\\n    <p>\\r\\n      ...Star-Wars Universe`s planets, to be exact :)\\r\\n    </p>\\r\\n    <mat-divider></mat-divider>\\r\\n    <p style=\\\"margin-top: 50px\\\">\\r\\n      One last thing... </p>\\r\\n    <p>\\r\\n      Kind of obvious, but still should be said explictly, as this is kind of skill-presentation page.\\r\\n    </p>\\r\\n    <p>\\r\\n      You can always navigate through navigation bar above, or through changing url. Your choice :)\\r\\n    </p>\\r\\n    <mat-divider></mat-divider>\\r\\n    <p style=\\\"margin-top: 60px\\\">\\r\\n      Enjoy browsing :)\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n</mat-card>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.css']\r\n})\r\nexport class WelcomeComponent {\r\n  constructor() { }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}